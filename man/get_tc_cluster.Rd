% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_timecourse.R
\name{get_tc_cluster}
\alias{get_tc_cluster}
\title{Time-course clustering}
\usage{
get_tc_cluster(
  x,
  ht_mat,
  exp_design,
  groupby = "condition",
  group_order = NULL,
  k = 6,
  dist = "euclidean",
  color = c("RdBu", "RdYlBu", "RdYlGn", "BrBG", "PiYG", "PRGn", "PuOr", "RdGy",
    "Spectral"),
  col_limit = 4,
  row_font_size = 5,
  col_font_size = 5,
  heatmap_width = 3,
  heatmap_height = 5,
  seed = NULL
)
}
\arguments{
\item{x}{a SummarizedExperiment or DEGdata object.}

\item{ht_mat}{Data.frame or matrix, the expresiong assay. If x is provided, be reset to assay(x).}

\item{exp_design}{Data.frame, the experiment design. If x is provided, be reset to colData(x)}

\item{groupby}{Character(1), group by which column in experiment design.}

\item{group_order}{Character vector or factor, the order of groups in the \code{groupby} column.}

\item{k}{Integer(1), the number of clusters.}

\item{color}{Character(1), sets the color panel (from \pkg{RColorBrewer}).
It can be a palette name in "RdBu", "RdYlBu", "RdYlGn", "BrBG", "PiYG", "PRGn", "PuOr", "RdGy", "Spectral".}

\item{col_limit}{Numeric(1), sets the outer limits of the color scale.}

\item{row_font_size}{Integer(1), font size of row name}

\item{col_font_size}{Integer(1), font size of columns label.}

\item{heatmap_width}{Numeric(1)}

\item{heatmap_height}{Numeric(1)}

\item{seed}{Integer(1) or NULL, the random seed.}
}
\value{
A list contains:
\itemize{
\item a cluster heatmap(Heatmap object from ComplexHeatmap),
\item the cluster result for heatmap(data.frame),
\item the output of \code{\link[TCseq]{timeclust}} and the seed.
}
}
\description{
Expression pattern clustering for timecourse or multi-group experiment via
\code{\link[TCseq]{timeclust}()}
}
\examples{
# Load sample
data(Silicosis_pg)
data <- Silicosis_pg
data_unique <- make_unique(data, "Gene.names", "Protein.IDs", delim = ";")

# Make SummarizedExperiment
ecols <- grep("LFQ.", colnames(data_unique))
se <- make_se_parse(data_unique, ecols, mode = "delim", sep = "_")

filt <- filter_se(se, thr = 0, fraction = 0.3, filter_formula = ~ Reverse != "+" & Potential.contaminant!="+")
norm <- normalize_vsn(filt)
imputed <- impute(norm, fun = "MinProb", q = 0.05)
diff <- test_diff(imputed,type = "control", control = "PBS")
dep <- add_rejections(diff)

# Expression pattern cluster
TC <- get_tc_cluster(get_signicant(dep),
                     group_order = c("PBS","W2","W4","W6","W9","W10"), # set the group order
                     heatmap_width = 2.5, heatmap_height = 5
)
TC$ht # Heatmap
head(TC$res)
}
