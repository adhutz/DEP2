% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_function_explore.R
\name{plot_Tsne}
\alias{plot_Tsne}
\title{Plot t-Sne}
\usage{
plot_Tsne(
  object,
  indicate = c("condition", "replicate"),
  label = FALSE,
  n = nrow(object),
  point_size = 4,
  label_size = 3,
  plot = TRUE,
  if_square = FALSE,
  features = "features",
  perplexity = 2,
  theseed = NULL,
  ...
)
}
\arguments{
\item{object}{SummarizedExperiment (or DEGdata) object,
Data object for which differentially enriched proteins are annotated
(output from \code{\link{test_diff}()} (or \code{\link{test_diff_deg}()}) and \code{\link{add_rejections}()}).}

\item{indicate}{Character,
Sets the color, shape and facet_wrap of the plot
based on columns from the experimental design (colData).}

\item{label}{Logical,
Whether or not to add sample labels.}

\item{n}{Integer(1),
Sets the number of top variable proteins to consider.}

\item{point_size}{Integer(1),
Sets the size of the points.}

\item{label_size}{Integer(1),
Sets the size of the labels.}

\item{plot}{Logical(1),
If \code{TRUE} (default) the PCA plot is produced.
Otherwise (if \code{FALSE}), the data which the
PCA plot is based on are returned.}

\item{if_square}{Logical(1), if TRUE plot in a}

\item{features}{Character(1), the feature name in plot title, could be "proteins","genes", default is "features"}

\item{perplexity}{Perplexity parameter (should not be bigger than 3 * perplexity < nrow(X) - 1. See \link[Rtsne]{Rtsne}().}

\item{theseed}{integer(1),Set random seed.}

\item{...}{Other parameters to \link[Rtsne]{Rtsne}().}
}
\value{
A scatter plot (generated by \code{\link[ggplot2]{ggplot}}).
}
\description{
\code{plot_Tsne} generates a t-Sne plot using the global variable features
}
\examples{
# Load example
data(Silicosis_pg)
data <- Silicosis_pg
data_unique <- make_unique(data, "Gene.names", "Protein.IDs", delim = ";")

# Differential test
ecols <- grep("LFQ.", colnames(data_unique))
se <- make_se_parse(data_unique, ecols,mode = "delim")
filt <- filter_se(se, thr = 0, fraction = 0.4, filter_formula = ~ Reverse != "+" & Potential.contaminant!="+")
norm <- normalize_vsn(filt)
imputed <- impute(norm, fun = "MinProb", q = 0.05)

# t-SNE plot
plot_Tsne(imputed)

}
