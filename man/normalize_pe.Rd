% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DEP_aggregation.R
\name{normalize_pe}
\alias{normalize_pe}
\title{Normalize a QFeatures object}
\usage{
normalize_pe(
  pe,
  method = c("diff.median", "quantiles", "quantiles.robust", "vsn"),
  i = "peptideRaw",
  name = "peptideNorm"
)
}
\arguments{
\item{pe}{A QFeature object}

\item{method}{Character(1), normalisation method, one of "diff.median", "quantiles", "quantiles.robust" or "vsn".
See \link[QFeatures]{normalize}.}

\item{i}{A numeric vector or a character vector giving the index or the name, respectively, of the assay(s) to be processed.}

\item{name}{Character(1) naming the new normalized assay name.}
}
\description{
Normalize a QFeatures object though \link[QFeatures:QFeatures-processing]{QFeatures::normalize} function
}
\examples{
\dontrun{
# Load example peptide data
data(Silicosis_peptide)
ecols <- grep("Intensity.", colnames(Silicosis_peptide), value = T)

# Construct QFeature object
pe_peptides <- make_pe_parse(Silicosis_peptide, columns = ecols, remove_prefix = T, log2transform = T,mode = "delim")

# Filter, imputation
filt_pe <- filter_pe(pe_peptides, thr = 1,fraction = 0.4, filter_formula = ~ Reverse != '+' & Potential.contaminant !="+" )
imp_pe <- QFeatures::addAssay(filt_pe, DEP2::impute(filt_pe[["peptideRaw"]], fun = "MinDet"), name = "peptideImp")

# Normalization
norm_pe <- normalize_pe(imp_pe,method = "quantiles", i = "peptideImp", name = "peptideNorm")
}
}
