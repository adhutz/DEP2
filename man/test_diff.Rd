% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DEP_protein.R
\name{test_diff}
\alias{test_diff}
\title{Differential enrichment/expression test}
\usage{
test_diff(
  se,
  type = c("all", "control", "manual"),
  control = NULL,
  test = NULL,
  design_formula = formula(~0 + condition),
  fdr.type = c("Strimmer's qvalue(t)", "Strimmer's qvalue(p)", "BH", "Storey's qvalue")
)
}
\arguments{
\item{se}{SummarizedExperiment,
Proteomics data from quantity table (output from \code{\link{make_se}()},
\code{\link{make_se_parse}()}), or from re-aggregate peptide quantity from \code{\link{aggregateFeatures}()} ).
For proteomics data directly from quantity table, it is adviced to first remove
low quanlity and undesired rows by \code{\link{filter_se}()}, and missing values are imputed by \code{\link{impute}()}.
Normalization is recommended in both workflow.}

\item{type}{"control", "all" or "manual",
The type of contrasts that will be tested.
This can be all possible pairwise comparisons ("all"),
limited to the comparisons versus the control ("control"), or
manually defined contrasts ("manual").}

\item{control}{Character(1),
The condition to which contrasts are generated if type = "control"
(a control condition would be most appropriate).}

\item{test}{Character,
The contrasts that will be tested if type = "manual".
These should be formatted as "SampleA_vs_SampleB" or
c("SampleA_vs_SampleC", "SampleB_vs_SampleC").}

\item{design_formula}{Formula,
Used to create the design matrix.}

\item{fdr.type}{Character(1), the method to control false discovery rate,
one of "Strimmer's qvalue(t)","Strimmer's qvalue(p)","BH","Storey's qvalue".
"Strimmer's qvalue" calculate fdr vis \code{\link[fdrtool]{fdrtool}()} using t-statistic or p values from limma.
"BH" calculate fdr vis \code{\link[stats]{p.adjust}()} using "BH" method .
"Storey's qvalue"  calculate fdr vis \code{\link[stats]{qvalue}()}.}

\item{contrast_upon}{C the contrast to bulid upon which column in experimentdesign}

\item{filter_ihw}{logical(1),Whether to use ihw to perform independent filtering and p-value adjustment, default FALSE}

\item{independentFiltering}{logical(1), whether independent filtering should be applied automatically, default TRUE}

\item{lfcshark}{logical(1),whether to use lfcshark, default FALSE}
}
\value{
A SummarizedExperiment object or a DEGdata
containing diff, test result from limma and fdr estimates of differential expression.
}
\description{
\code{test_diff} performs a differential enrichment/expression test based on
protein/peptide-wise linear models and empirical Bayes
statistics using \pkg{limma}. False Discovery Rates are estimated
using \code{Strimmer's qvalue}, \code{Benjamini-Hochberg fdr} or \code{Storey's qvalue}.
}
\examples{
# Load example
data <- UbiLength
data <- data[data$Reverse != "+" & data$Potential.contaminant != "+",]
data_unique <- make_unique(data, "Gene.names", "Protein.IDs", delim = ";")

# Make SummarizedExperiment
columns <- grep("LFQ.", colnames(data_unique))
exp_design <- UbiLength_ExpDesign
se <- make_se(data_unique, columns, exp_design)

# Filter, normalize and impute missing values
filt <- filter_missval(se, thr = 0)
norm <- normalize_vsn(filt)
imputed <- impute(norm, fun = "MinProb", q = 0.01)

# Test for differentially expressed proteins
diff <- test_diff(imputed, "control", "Ctrl")
diff <- test_diff(imputed, "manual",
    test = c("Ubi4_vs_Ctrl", "Ubi6_vs_Ctrl"))

# Test for differentially expressed proteins with a custom design formula
diff <- test_diff(imputed, "control", "Ctrl",
    design_formula = formula(~ 0 + condition + replicate))
}
